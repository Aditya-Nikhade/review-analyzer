services:
  # Service 1: The MySQL Database
  db:
    image: mysql:8.0 # Use the official MySQL image from Docker Hub
    container_name: mysql_db
    restart: always # Always restart the DB container if it stops
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD} # Pulls from the .env file
      MYSQL_DATABASE: ${DB_DATABASE} # Creates the database on startup
    ports:
      # Map port 3307 on your local machine to port 3306 in the container.
      # We use 3307 to avoid conflicts if you have a local MySQL server already.
      - "3307:3306"
    volumes:
      # This line is optional but recommended. It persists your database data
      # on your local machine, so you don't lose it if the container is removed.
      - mysql-data:/var/lib/mysql

  # Service 2: Your Python Application (API and Pipeline)
  app:
    build: . # Build the image from the Dockerfile in the current directory
    container_name: review_analyzer_app
    depends_on:
      - db # This tells Docker to start the 'db' service before starting the 'app' service
    env_file:
      - .env # Load all environment variables from the .env file
    ports:
      - "5000:5000" # Map the application's port 5000
    # The default command when running 'docker-compose up' is to start the web server.
    # This comes from the CMD in your Dockerfile.

volumes:
  # Defines the named volume for data persistence
  mysql-data: